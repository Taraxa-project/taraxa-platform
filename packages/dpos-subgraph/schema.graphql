# type BasicInfo @entity(immutable: false) {
#   id: ID!
#   totalStake: BigInt!
#   selfStake: BigInt!
#   externalStake: BigInt!
#   commission: Int!
#   lastCommissionChange: BigInt!
#   owner: String!
#   description: String
#   endpoint: String
# }

# type Delegator @entity(immutable: false) {
#   id: ID!
#   account: String!
#   totalStake: BigInt!
#   rewards: BigInt!
#   currentDelegations: [Delegation!]!
#   delegations: [Delegation!]!
#   undelegations: [Undelegation!]!
# }

# type Validator @entity(immutable: false) {
#   id: ID!
#   account: String!
#   currentDelegations: [Delegation!]! @derivedFrom(field: "validator")
#   currentDelegationIds: [String!]!
#   undelegations: [Undelegation!]! @derivedFrom(field: "validator")
#   commissionChanges: [CommissionChange!]! @derivedFrom(field: "validator")
#   # isEligible: Boolean
#   # info: BasicInfo!
# }

type Delegation @entity(immutable: false) {
  id: ID!
  amount: BigInt!
  delegator: String!
  validator: String!
}

type Undelegation @entity(immutable: false) {
  id: ID!
  stake: BigInt!
  eligibilityBlock: BigInt!
  delegator: String!
  validator: String!
}

type CommissionChange @entity(immutable: true) {
  id: ID!
  commission: Int!
  registrationBlock: Int!
  applianceBlock: Int!
  validator: String!
}
